import Head from 'next/head'
import { useEffect, useRef } from 'react'
import * as THREE from 'three'
import { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'
export default function Home() {
  // SE OBTIENE LA CARD DEL OBJETO
  // useEffect(() => {
  //   if (typeof window !== 'undefined') {
  //     //  Card 3d
  //     const card3D = document.querySelector('.card')
  //     // Dimensiones de la Card
  //     const card3DWidth = document.querySelector('.card').clientWidth
  //     const card3DHeight = document.querySelector('.card').clientHeight

  //     // console.log(card3DWidth, card3DHeight)
  //     //creating scene
  //     var scene = new THREE.Scene()
  //     scene.background = new THREE.Color(0xffffff)

  //     //add camera
  //     var camera = new THREE.PerspectiveCamera(
  //       75,
  //       card3DWidth / card3DHeight,
  //       0.1,
  //       1000
  //     )

  //     //renderer
  //     var renderer = new THREE.WebGLRenderer()
  //     renderer.setSize(card3DWidth, card3DHeight)
  //     card3D.appendChild(renderer.domElement)

  //     // const texturaFloor = new THREE.TextureLoader().load('/floor/piso3.webp')
  //     // console.log('/floor/piso3.webp')
  //     // texturaFloor.wrapS = THREE.RepeatWrapping
  //     // texturaFloor.wrapT = THREE.RepeatWrapping
  //     // texturaFloor.repeat.set(4, 4)

  //     //add geometry
  //     let floorTexture = new THREE.TextureLoader().load('/floor/piso3.webp')
  //     floorTexture.wrapS = THREE.RepeatWrapping
  //     floorTexture.wrapT = THREE.RepeatWrapping
  //     floorTexture.repeat.set(4, 4)
  //     let paredTexture = new THREE.TextureLoader().load('/floor/piso3.webp')
  //     paredTexture.wrapS = THREE.RepeatWrapping
  //     paredTexture.wrapT = THREE.RepeatWrapping
  //     paredTexture.repeat.set(4, 4)

  //     const planoFloor = new THREE.PlaneGeometry(10, 10)
  //     let materialFloor = new THREE.MeshBasicMaterial({
  //       map: floorTexture,
  //       side: THREE.DoubleSide
  //     })
  //     var floor = new THREE.Mesh(planoFloor, materialFloor)
  //     floor.rotation.x = Math.PI / 2
  //     floor.position.y = -0.5

  //     // const planoPared = new THREE.PlaneGeometry(100, 100)

  //     // const materialPared = new THREE.MeshBasicMaterial({
  //     //   map: paredTexture,
  //     //   side: THREE.DoubleSide
  //     // })
  //     scene.add(floor)

  //     camera.position.z = 5

  //     // RENDER DEL  TENIS

  //     const loader = new OBJLoader()

  //     // loader.setPath('/figure3d/')
  //     loader.load('figure3d/converse.obj', function (object) {
  //       object.position.y = -0.5
  //       scene.add(object)
  //       const telajeanazul = new THREE.TextureLoader().load(
  //         '/textura/converse.jpg'
  //       )
  //       let material1 = new THREE.MeshPhongMaterial({
  //         map: telajeanazul,
  //         side: THREE.DoubleSide
  //       })
  //       object = new THREE.Mesh(planoFloor, material1)
  //       scene.add(object)
  //     })
  //     // var loader = new THREE.OBJLoader()
  //     // loader.load('/figure3d/supastarOBJ.obj', (root) => {
  //     //   scene.add(root)
  //     // })

  //     //animation
  //     var animate = function () {
  //       requestAnimationFrame(animate)

  //       // cube.rotation.x += 0.01
  //       // cube.rotation.y += 0.01

  //       renderer.render(scene, camera)
  //     }

  //     animate()
  //   }
  }, [])

  return (
    <>
      <Head>
        <title>Shoes</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className=" flex justify-center items-center min-h-screen">
        <div className="w-[90%] h-[90vh] bg-slate-500 grid grid-cols-2">
          <div
            className="3d card"
            // ref={refCard3D}
          ></div>
          <div className="description bg-green-600"></div>
        </div>
      </div>
    </>
  )
}
